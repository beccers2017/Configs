set nocompatible
filetype off
"set rtp+=~/.vim/autoload/plug.vim
call plug#begin('~/.vim/plugged')
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'Yggdroot/indentLine'
"Plug 'thaerkh/vim-workspace'
"Plug 'wellle/visual-split.vim'
"Plug 'mattboehm/vim-accordion'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'jiangmiao/auto-pairs'
"Plug 'Chiel92/vim-autoformat'
Plug 'flazz/vim-colorschemes'
"Plug 'nathanaelkane/vim-indent-guides'
Plug 'itchyny/lightline.vim'
Plug 'mbbill/undotree'
Plug 'townk/vim-autoclose'
"Plug 'scrooloose/syntastic'
"Plug 'hdima/python-syntax'
"Plug 'tiagofumo/vim-nerdtree-syntax-hightlight'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'junegunn/gv.vim'
Plug 'jreybert/vimagit'
Plug 'majutsushi/tagbar'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'bronson/vim-trailing-whitespace'
Plug 'ryanoasis/vim-devicons'
"Plug 'klen/python-mode'
Plug 'thinca/vim-quickrun'
"Plug 'chiel92/vim-autoformat'
"Plug 'prettier/vim-prettier'
"Plug 'fs111/pydoc.vim'
Plug 'matze/vim-move'

call plug#end()
filetype plugin on
filetype plugin indent on

set autoread
set cmdheight=4
set number
set wrap
set textwidth=150
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smartindent
set autoindent
set smarttab
set noexpandtab
set showmode

set nobackup
set noswapfile
set nowb
set showcmd

set incsearch
set hlsearch
set smartcase
set ignorecase
set esckeys


set history=999
set undolevels=999

set foldenable
set ttyfast
set scrolloff=5

syntax on

"colorscheme vividchalk_modified
set background=dark

set history=999
set undolevels=999

set nomodeline
set showmatch
set backspace=2
set backspace=indent,eol,start
set laststatus=2
set noerrorbells
set visualbell
set t_vb=
set mouse=a
set showbreak=>\
set hidden


scriptencoding=utf-8

if !has('gui_running')
	set t_Co=256
endif

"autocmd vimenter * NERDTree
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

"let g:NERDSpaceDelims = 1
"let g:NERDCompactSexyComs = 1
"let g:NERDTreeFileExtensionHighlightFullName = 1
"let g:NERDTreeExactMatchHighlightFullName = 1
"let g:NERDTreePatternMatchHighlightFullName = 1
