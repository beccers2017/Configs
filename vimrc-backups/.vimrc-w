set nocompatible
filetype off
set rtp+=~/.vim/autoload/plug.vim
call plug#begin()
Plug 'itchyny/lightline.vim'
Plug 'airblade/vim-gitgutter'
"Plug 'scrooloose/syntastic'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'yggdroot/indentline'
Plug 'xuyuanp/nerdtree-git-plugin'
Plug 'thaerkh/vim-workspace'
"Plug 'bronson/vim-trailing-whitespace'
Plug 'jiangmiao/auto-pairs'
"Plug 'thinca/vim-quickrun'
"Plug 'octol/vim-cpp-enhanced-highlight'
"Plug 'alexmwu/doxygentoolkit.vim'
Plug 'townk/vim-autoclose'
"Plug 'hdima/python-syntax'
Plug 'matze/vim-move'
"Plug 'vim-python/python-syntax'
"Plug 'lokaltog/vim-powerline'
"Plug 'powerline/powerline'
Plug 'tpope/vim-fugitive'
Plug 'flazz/vim-colorschemes'
"Plug 'mattboehm/vim-accordian'
Plug 'wellle/visual-split.vim'
Plug 'mbbill/undotree'
Plug 'junegunn/gv.vim'
Plug 'jreybert/vimagit'
Plug 'majutsushi/tagbar'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'ryanoasis/vim-devicons'
"Plug 'chiel192/vim-autoformat'
Plug 'prettier/vim-prettier'
"Plug 'fs111/pydoc.vim'
"Plug 'klen/python-mode'
Plug 'exvim/ex-searchcompl'
call plug#end()

filetype plugin indent on
syntax on
set modelines=0
set number
set encoding=utf-8
set wrap
set textwidth=120
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set backspace=indent,eol,start
set laststatus=2
set showmode
set showcmd
set hlsearch
set incsearch
set ignorecase
set smartcase
set esckeys
set autoindent
set showmatch
set t_Co=256
set background=dark
set noerrorbells
set visualbell
set t_vb=
set noswapfile
set showbreak=>\
set mouse=a
set nobackup
set nowb
set autoread
set history=1000
set hidden
scriptencoding=utf-8

if has('persistent_undo')
    silent !mkdir ~/.vim/backups > /dev/null 2>&1
    set undodir=~/.vim/backups
set undofile
endif

if !has('gui_running')
    set t_Co=256
endif

let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
lef g:NERDTrimTrailingWhitespace = 1
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

autocmd VimEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <F2> :NERDTreeToggle<CR>
let g:indentLine_color_term = 255

let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 1
